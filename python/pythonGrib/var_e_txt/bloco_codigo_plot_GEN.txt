m = Basemap(projection='mill',
            llcrnrlat=lats_lons_reg_escolhida[0], 
            urcrnrlat=lats_lons_reg_escolhida[1],
            llcrnrlon=lats_lons_reg_escolhida[2],
            urcrnrlon=lats_lons_reg_escolhida[3],
            resolution='i')

rc('font',weight='normal') 
rc('xtick',labelsize=12)  
rc('font',size=12)
rc('ytick',labelsize=12)    
plt.figure(figsize=(8,10))
lons_grid,lats_grid=np.meshgrid(lon_reg,lat_reg)
x, y = m(lons_grid, lats_grid)

meridianinterval=np.arange(lats_lons_reg_escolhida[2],lats_lons_reg_escolhida[3],2)
parallelsinterval=np.arange(lats_lons_reg_escolhida[0],lats_lons_reg_escolhida[1])
m.drawparallels(parallelsinterval,labels=[1,0,0,0],  color='k',linewidth=.3)
m.drawmeridians(meridianinterval,labels=[0,0,0,1],color='k',linewidth=.3)

m.drawcoastlines()
m.drawcountries()
m.drawstates()

contourf = m.contourf(x, y, np.squeeze(data),cmap='GnBu', levels=np.linspace(100900, 106100, 41))
cs1 = m.contour(x, y, np.squeeze(data),colors='k', levels=np.linspace(100900, 106100, 21), linewidths=0.2)
#contourf = m.contourf(x, y, np.squeeze(data),cmap='GnBu', levels=np.linspace(min_var_met, max_var_met, 200))
#cs1 = m.contour(x, y, np.squeeze(data),colors='k', levels=np.linspace(min_var_met, max_var_met, 200), linewidths=0.2)
plt.clabel(cs1,fmt='%d',fontsize=8)

print(contourf)
cbar=m.colorbar(contourf, location='right', pad="1%")
cbar.set_label(unidade_var_met)
